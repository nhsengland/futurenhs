<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Umbraco9ContentApi.Core</name>
    </assembly>
    <members>
        <member name="T:Umbraco9ContentApi.Core.Composers.FutureNhsServicesComposer">
            <summary>
            Registers custom services on startup. 
            </summary>
            <seealso cref="T:Umbraco.Cms.Core.Composing.IComposer" />
        </member>
        <member name="T:Umbraco9ContentApi.Core.Composers.uSyncServicesComposer">
            <summary>
            Registers custom services on startup. 
            </summary>
            <seealso cref="T:Umbraco.Cms.Core.Composing.IComposer" />
        </member>
        <member name="T:Umbraco9ContentApi.Core.Constants.uSync.uSyncDirectoryPaths">
            <summary>
            uSync directory paths.
            </summary>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Controllers.BlockController">
            <summary>
            Block Api controller.
            </summary>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.BlockController.CreateBlockAsync(Umbraco9ContentApi.Core.Models.Requests.CreateBlockRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the block asynchronous.
            </summary>
            <param name="pageId">The page identifier.</param>
            <param name="createRequest">The create request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.BlockController.UpdateBlockAsync(System.Guid,Umbraco9ContentApi.Core.Models.Content.ContentModel,System.Threading.CancellationToken)">
            <summary>
            Updates the block asynchronous.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="blockModel">The block model.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.BlockController.GetBlockAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the block asynchronous.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.BlockController.GetAllBlocksAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all blocks asynchronous.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.BlockController.GetBlocPlaceholderValuesAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the block placeholder values for {propertyTypeAlias} asynchronous.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="propertyGroupAlias">The property type alias.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.BlockController.GetBlockContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the block content asynchronous.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.BlockController.GetBlockLabelsAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the block labels asynchronous.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Controllers.ContentController">
            <summary>
            Content Api controller.
            </summary>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.ContentController.GetPublishedContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the published content asynchronous.
            </summary>
            <param name="contentId">The content identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.ContentController.GetDraftContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the content draft asynchronous.
            </summary>
            <param name="contentId">The content identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.ContentController.PublishContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Publishes the content asynchronous.
            </summary>
            <param name="contentId">The content identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.ContentController.DeleteContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes the content asynchronous.
            </summary>
            <param name="contentId">The content identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.ContentController.DiscardDraftContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Discards the draft content asynchronous.
            </summary>
            <param name="contentId">The content identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Controllers.DefaultRenderController">
            <summary>
            Overrides the default homepage view to redirect to the swagger page.
            </summary>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.DefaultRenderController.Index">
            <summary>
            Default route.
            </summary>
            <returns>A redirect to the swagger page.</returns>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Controllers.PageController">
            <summary>
            Page Api controller.
            </summary>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.PageController.GetAllPagesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all pages asynchronous.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.PageController.CreatePageAsync(Umbraco9ContentApi.Core.Models.Requests.CreatePageRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the content asynchronous.
            </summary>
            <param name="createRequest">The create request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.PageController.UpdateUserEditingContentAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Updates the user editing content asynchronous.
            </summary>
            <param name="pageId">The page identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Controllers.SitemapController">
            <summary>
            Sitemap Api Controller.
            </summary>
            <seealso cref="T:Umbraco.Cms.Web.Common.Controllers.UmbracoApiController" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.SitemapController.GetSiteMapAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the site map asynchronous.
            </summary>
            <param name="pageId">The page identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Controllers.TemplateController">
            <summary>
            Template Api controller.
            </summary>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.TemplateController.GetTemplateAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the template asynchronous.
            </summary>
            <param name="templateId">The template identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.TemplateController.GetAllTemplatesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all templates asynchronous.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.TemplateController.DeleteTemplateAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes the template asynchronous.
            </summary>
            <param name="templateId">The template identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Controllers.uSyncController">
            <summary>
            uSync Api controller to access uSync handlers.
            </summary>
            <seealso cref="T:Umbraco.Cms.Web.Common.Controllers.UmbracoApiController" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Controllers.uSyncController.DoUSyncImportAsync(System.Boolean)">
            <summary>
            Imports all usync items.
            </summary>
            <param name="isActive">if set to <c>true</c> [import].</param>
            <remarks></remarks>
            <returns>True or false.</returns>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Converters.BlockPickerConverter">
            <summary>
            BlockPickerConverter generates content models for template blocks.
            </summary>
            <seealso cref="T:UmbracoContentApi.Core.Converters.IConverter" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Converters.BlockPickerConverter.#ctor(System.Lazy{Umbraco9ContentApi.Core.Resolvers.Interfaces.IFutureNhsContentResolver},Umbraco.Cms.Core.Services.IContentService)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco9ContentApi.Core.Converters.BlockPickerConverter"/> class.
            </summary>
            <param name="contentResolver">The content resolver.</param>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Converters.BlockPickerConverter.EditorAlias">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Converters.BlockPickerConverter.Convert(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsBlockHandler">
            <summary>
            The handler that handles block methods and calls the content service.
            </summary>
            <seealso cref="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsBlockHandler" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsBlockHandler.GetAllBlocksAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsBlockHandler.GetBlockAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsBlockHandler.GetBlockPlaceholderValuesAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsBlockHandler.GetBlockContentAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsBlockHandler.GetBlockLabelsAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsBlockHandler.CreateBlockAsync(Umbraco9ContentApi.Core.Models.Requests.CreateBlockRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsBlockHandler.UpdateBlockAsync(System.Guid,Umbraco9ContentApi.Core.Models.Content.ContentModel,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsContentHandler">
            <summary>
            The handler that handles content methods and calls the content service.
            </summary>
            <seealso cref="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsContentHandler" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsContentHandler.PublishContentAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsContentHandler.GetPublishedContentAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsContentHandler.GetDraftContentAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsContentHandler.DeleteContentAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsContentHandler.GetAllPagesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsContentHandler.DiscardDraftContentAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsPageHandler">
            <summary>
            The handler that handles content methods and calls the content service.
            </summary>
            <seealso cref="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsContentHandler" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsPageHandler.CreatePageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsPageHandler.UpdatePageAsync(System.Guid,Umbraco9ContentApi.Core.Models.PageModel,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsPageHandler.GetAllPagesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsPageHandler.UpdateUserEditingContentAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsSiteMapHandler">
            <summary>
            FutureNhsSitemapHandler to access FutureNhsSitemapService class.
            </summary>
            <seealso cref="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsSiteMapHandler" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsSiteMapHandler.GetSitemapGroupItemsAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsSiteMapHandler.PopulateGroupSiteMapItemViewModel(Umbraco.Cms.Core.Models.PublishedContent.IPublishedContent)">
            <summary>
            Populates the group site map item view model.
            </summary>
            <param name="root">The root.</param>
            <returns>GroupSiteMapItemViewModel.</returns>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsTemplateHandler">
            <summary>
            The handler that handles template methods and calls the content service.
            </summary>
            <seealso cref="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsTemplateHandler" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsTemplateHandler.#ctor(Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsTemplateHandler"/> class.
            </summary>
            <param name="futureNhsContentService">The future NHS content service.</param>
            <param name="config">The configuration.</param>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsTemplateHandler.GetTemplateAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.FutureNhsTemplateHandler.GetAllTemplatesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsBlockHandler.GetBlockAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the block asynchronous.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsBlockHandler.GetAllBlocksAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all blocks asynchronous.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsBlockHandler.GetBlockPlaceholderValuesAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the block placeholder values asynchronous.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="propertyGroupAlias">The property group alias.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsBlockHandler.GetBlockContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the block content asynchronous.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsBlockHandler.GetBlockLabelsAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the block lables asynchronous.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsBlockHandler.CreateBlockAsync(Umbraco9ContentApi.Core.Models.Requests.CreateBlockRequest,System.Threading.CancellationToken)">
            <summary>
            Creates the block asynchronous.
            </summary>
            <param name="createRequest">The create request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsBlockHandler.UpdateBlockAsync(System.Guid,Umbraco9ContentApi.Core.Models.Content.ContentModel,System.Threading.CancellationToken)">
            <summary>
            Updates the block asynchronous.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="blockModel">The block model.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsContentHandler.PublishContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Publishes the content asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsContentHandler.DeleteContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes the content asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsContentHandler.GetPublishedContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the content published asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsContentHandler.GetDraftContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the content draft asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsContentHandler.GetAllPagesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all content asynchronous.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsContentHandler.DiscardDraftContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Discards the draft content asynchronous.
            </summary>
            <param name="contentId">The content identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsPageHandler.CreatePageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates the content asynchronous.
            </summary>
            <param name="pageName">Name of the page.</param>
            <param name="pageParentId">The page parent identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsPageHandler.UpdateUserEditingContentAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Updates the user editing content asynchronous.
            </summary>
            <param name="pageId">The page identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsPageHandler.UpdatePageAsync(System.Guid,Umbraco9ContentApi.Core.Models.PageModel,System.Threading.CancellationToken)">
            <summary>
            Updates the page asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="pageModel">The page model.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsSiteMapHandler">
            <summary>
            FutureNhsSitemapHandler interface.
            </summary>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsSiteMapHandler.GetSitemapGroupItemsAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the sitemap group items asynchronous.
            </summary>
            <param name="pageId">The page identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsTemplateHandler.GetTemplateAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the template asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.FutureNhs.Interface.IFutureNhsTemplateHandler.GetAllTemplatesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all templates asynchronous.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.uSync.Interface.IuSyncHandler.RunImportAsync">
            <summary>
            Runs the import.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Handlers.uSync.uSyncHandler">
            <summary>
            Handler for uSync services.
            </summary>
            <seealso cref="T:Umbraco9ContentApi.Core.Handlers.uSync.Interface.IuSyncHandler" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.uSync.uSyncHandler.#ctor(Umbraco9ContentApi.Core.Services.uSync.Interface.IuSyncContentService,Umbraco9ContentApi.Core.Services.uSync.Interface.IuSyncContentTypeService,Umbraco9ContentApi.Core.Services.uSync.Interface.IuSyncDataTypeService,Umbraco9ContentApi.Core.Services.uSync.Interface.IuSyncMediaTypeService,Umbraco9ContentApi.Core.Services.uSync.Interface.IuSyncMediaService)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco9ContentApi.Core.Handlers.uSync.uSyncHandler"/> class.
            </summary>
            <param name="uSyncContentService">The u synchronize content service.</param>
            <param name="uSyncContentTypeService">The u synchronize content type service.</param>
            <param name="uSyncDataTypeService">The u synchronize data type service.</param>
            <param name="uSyncMediaTypeService">The u synchronize media type service.</param>
            <param name="uSyncMediaService">The u synchronize media service.</param>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Handlers.uSync.uSyncHandler.RunImportAsync">
            <inheritdoc />
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Requests.CreateBlockRequest.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Requests.CreateBlockRequest.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Requests.CreateBlockRequest.parentId">
            <summary>
            Gets or sets the page identifier.
            </summary>
            <value>
            The page identifier.
            </value>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Requests.CreatePageRequest.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Requests.CreatePageRequest.ParentId">
            <summary>
            Gets or sets the parent identifier.
            </summary>
            <value>
            The parent identifier.
            </value>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Sitemap.SitemapGroupItemModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Sitemap.SitemapGroupItemModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Sitemap.SitemapGroupItemModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Sitemap.SitemapGroupItemModel.ParentId">
            <summary>
            Gets or sets the parent identifier.
            </summary>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Sitemap.SitemapGroupItemModel.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Sitemap.SitemapGroupItemModel.EditedAt">
            <summary>
            Gets or sets the edited at.
            </summary>
        </member>
        <member name="P:Umbraco9ContentApi.Core.Models.Sitemap.SitemapGroupItemModel.Level">
            <summary>
            Gets or sets the level.
            </summary>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.#ctor(Umbraco.Cms.Core.IPublishedContentQuery,System.Lazy{Umbraco9ContentApi.Core.Resolvers.Interfaces.IFutureNhsContentResolver},Umbraco.Cms.Core.Services.IContentService)">
            <summary>Initializes a new instance of the <see cref="T:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService" /> class.</summary>
            <param name="publishedContent">Content of the published.</param>
            <param name="contentResolver">The content resolver.</param>
            <param name="contentService">The content service.</param>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.GetPublishedContentChildrenAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.GetPublishedContentAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.GetDraftContentAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.ResolvePublishedContentAsync(Umbraco.Cms.Core.Models.PublishedContent.IPublishedContent,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.ResolveDraftContentAsync(Umbraco.Cms.Core.Models.IContent,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.CreateContentAsync(System.String,System.Guid,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.DeleteContentAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.PublishContentAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.GetTemplateBlocksAsync(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.SaveContentAsync(Umbraco.Cms.Core.Models.IContent,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.SaveAndPublishContentAsync(Umbraco.Cms.Core.Models.IContent,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.AssignBlockToContent(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.GetAssociatedPublishedBlocks(Umbraco.Cms.Core.Models.PublishedContent.IPublishedContent)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.RollbackDraftContentAsync(Umbraco.Cms.Core.Models.IContent,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.DeleteAssociatedContent(System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.FutureNhsContentService.UpdateUserEditingContentAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.GetPublishedContentChildrenAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the published content children asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.GetPublishedContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the published content asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.GetDraftContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the content asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.ResolvePublishedContentAsync(Umbraco.Cms.Core.Models.PublishedContent.IPublishedContent,System.String,System.Threading.CancellationToken)">
            <summary>
            Resolves the published content asynchronous.
            </summary>
            <param name="content">The content.</param>
            <param name="propertyGroupAlias">The property group alias.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.ResolveDraftContentAsync(Umbraco.Cms.Core.Models.IContent,System.Threading.CancellationToken)">
            <summary>
            Resolves the draft content asynchronous.
            </summary>
            <param name="content">The content.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.CreateContentAsync(System.String,System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates the content asynchronous.
            </summary>
            <param name="Name">The name.</param>
            <param name="parentId">The parent identifier.</param>
            <param name="documentTypeAlias">The document type alias.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.DeleteContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes the asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.DeleteAssociatedContent(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes the content of the associated.
            </summary>
            <param name="blockId">The block identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.PublishContentAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Publishes the asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.UpdateUserEditingContentAsync(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Updates the user editing content asynchronous.
            </summary>
            <param name="pageId">The page identifier.</param>
            <param name="userId">The user identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.GetTemplateBlocksAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets the template blocks asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.SaveContentAsync(Umbraco.Cms.Core.Models.IContent,System.Threading.CancellationToken)">
            <summary>
            Saves the content asynchronous.
            </summary>
            <param name="content">The content.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.SaveAndPublishContentAsync(Umbraco.Cms.Core.Models.IContent,System.Threading.CancellationToken)">
            <summary>
            Saves the and publish content asynchronous.
            </summary>
            <param name="content">The content.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.AssignBlockToContent(System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Assigns the block to the content.
            </summary>
            <param name="parentId">The parent identifier.</param>
            <param name="blockId">The block identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.GetAssociatedPublishedBlocks(Umbraco.Cms.Core.Models.PublishedContent.IPublishedContent)">
            <summary>
            Gets the associated blocks.
            </summary>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.FutureNhs.Interface.IFutureNhsContentService.RollbackDraftContentAsync(Umbraco.Cms.Core.Models.IContent,System.Threading.CancellationToken)">
            <summary>
            Rollbacks the draft content asynchronous.
            </summary>
            <param name="draftContent">Content of the draft.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.uSync.Interface.IuSyncBaseService.ImportAsync">
            <summary>
            Initiate import.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Umbraco9ContentApi.Core.Services.uSync.uSyncContentService">
            <summary>
            uSyncContentService.
            </summary>
            <seealso cref="T:Umbraco9ContentApi.Core.Services.uSync.uSyncBaseService" />
            <seealso cref="T:Umbraco9ContentApi.Core.Services.uSync.Interface.IuSyncContentService" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.uSync.uSyncContentService.#ctor(Microsoft.Extensions.Logging.ILogger{uSync.BackOffice.SyncHandlers.Handlers.ContentHandler},Umbraco.Cms.Core.Services.IContentService,Umbraco.Cms.Core.Cache.AppCaches,Umbraco.Cms.Core.Services.IEntityService,Umbraco.Cms.Core.Strings.IShortStringHelper,uSync.BackOffice.Services.SyncFileService,uSync.BackOffice.Services.uSyncEventService,uSync.BackOffice.Configuration.uSyncConfigService,uSync.Core.ISyncItemFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco9ContentApi.Core.Services.uSync.uSyncContentService"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="contentService">The content service.</param>
            <param name="appCaches">The application caches.</param>
            <param name="entityService">The entity service.</param>
            <param name="shortStringHelper">The short string helper.</param>
            <param name="uSyncFileService">The u synchronize file service.</param>
            <param name="uSyncEventService">The u synchronize event service.</param>
            <param name="uSyncConfigService">The u synchronize configuration service.</param>
            <param name="syncItemFactory">The synchronize item factory.</param>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.uSync.uSyncContentService.ImportAsync">
            <inheritdoc />
        </member>
        <member name="T:Umbraco9ContentApi.Core.Services.uSync.uSyncDataTypeService">
            <summary>
            uSyncDataTypeService.
            </summary>
            <seealso cref="T:Umbraco9ContentApi.Core.Services.uSync.uSyncBaseService" />
            <seealso cref="T:Umbraco9ContentApi.Core.Services.uSync.Interface.IuSyncDataTypeService" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.uSync.uSyncDataTypeService.#ctor(Microsoft.Extensions.Logging.ILogger{uSync.BackOffice.SyncHandlers.Handlers.DataTypeHandler},Umbraco.Cms.Core.Services.IDataTypeService,Umbraco.Cms.Core.Cache.AppCaches,Umbraco.Cms.Core.Services.IEntityService,Umbraco.Cms.Core.Strings.IShortStringHelper,uSync.BackOffice.Services.SyncFileService,uSync.BackOffice.Services.uSyncEventService,uSync.BackOffice.Configuration.uSyncConfigService,uSync.Core.ISyncItemFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco9ContentApi.Core.Services.uSync.uSyncDataTypeService"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="dataTypeService">The data type service.</param>
            <param name="appCaches">The application caches.</param>
            <param name="entityService">The entity service.</param>
            <param name="shortStringHelper">The short string helper.</param>
            <param name="uSyncFileService">The u synchronize file service.</param>
            <param name="uSyncEventService">The u synchronize event service.</param>
            <param name="uSyncConfigService">The u synchronize configuration service.</param>
            <param name="syncItemFactory">The synchronize item factory.</param>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.uSync.uSyncDataTypeService.ImportAsync">
            <inheritdoc />
        </member>
        <member name="T:Umbraco9ContentApi.Core.Services.uSync.uSyncMediaService">
            <summary>
            uSyncMediaService.
            </summary>
            <seealso cref="T:Umbraco9ContentApi.Core.Services.uSync.uSyncBaseService" />
            <seealso cref="T:Umbraco9ContentApi.Core.Services.uSync.Interface.IuSyncMediaService" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.uSync.uSyncMediaService.#ctor(Microsoft.Extensions.Logging.ILogger{uSync.BackOffice.SyncHandlers.Handlers.MediaHandler},Umbraco.Cms.Core.Services.IMediaService,Umbraco.Cms.Core.Cache.AppCaches,Umbraco.Cms.Core.Services.IEntityService,Umbraco.Cms.Core.Strings.IShortStringHelper,uSync.BackOffice.Services.SyncFileService,uSync.BackOffice.Services.uSyncEventService,uSync.BackOffice.Configuration.uSyncConfigService,uSync.Core.ISyncItemFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco9ContentApi.Core.Services.uSync.uSyncMediaService"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="mediaService">The media service.</param>
            <param name="appCaches">The application caches.</param>
            <param name="entityService">The entity service.</param>
            <param name="shortStringHelper">The short string helper.</param>
            <param name="uSyncFileService">The u synchronize file service.</param>
            <param name="uSyncEventService">The u synchronize event service.</param>
            <param name="uSyncConfigService">The u synchronize configuration service.</param>
            <param name="syncItemFactory">The synchronize item factory.</param>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.uSync.uSyncMediaService.ImportAsync">
            <inheritdoc />
        </member>
        <member name="T:Umbraco9ContentApi.Core.Services.uSync.uSyncMediaTypeService">
            <summary>
            uSyncMediaTypeService.
            </summary>
            <seealso cref="T:Umbraco9ContentApi.Core.Services.uSync.uSyncBaseService" />
            <seealso cref="T:Umbraco9ContentApi.Core.Services.uSync.Interface.IuSyncMediaTypeService" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.uSync.uSyncMediaTypeService.#ctor(Microsoft.Extensions.Logging.ILogger{uSync.BackOffice.SyncHandlers.Handlers.MediaTypeHandler},Umbraco.Cms.Core.Services.IMediaTypeService,Umbraco.Cms.Core.Cache.AppCaches,Umbraco.Cms.Core.Services.IEntityService,Umbraco.Cms.Core.Strings.IShortStringHelper,uSync.BackOffice.Services.SyncFileService,uSync.BackOffice.Services.uSyncEventService,uSync.BackOffice.Configuration.uSyncConfigService,uSync.Core.ISyncItemFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco9ContentApi.Core.Services.uSync.uSyncMediaTypeService"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="mediaTypeService">The media type service.</param>
            <param name="appCaches">The application caches.</param>
            <param name="entityService">The entity service.</param>
            <param name="shortStringHelper">The short string helper.</param>
            <param name="uSyncFileService">The u synchronize file service.</param>
            <param name="uSyncEventService">The u synchronize event service.</param>
            <param name="uSyncConfigService">The u synchronize configuration service.</param>
            <param name="syncItemFactory">The synchronize item factory.</param>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.uSync.uSyncMediaTypeService.ImportAsync">
            <inheritdoc />
        </member>
        <member name="T:Umbraco9ContentApi.Core.Services.uSyncContentTypesService">
            <summary>
            uSyncContentTypeService.
            </summary>
            <seealso cref="T:Umbraco9ContentApi.Core.Services.uSync.uSyncBaseService" />
            <seealso cref="T:Umbraco9ContentApi.Core.Services.uSync.Interface.IuSyncContentTypeService" />
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.uSyncContentTypesService.#ctor(Microsoft.Extensions.Logging.ILogger{uSync.BackOffice.SyncHandlers.Handlers.ContentTypeHandler},Umbraco.Cms.Core.Services.IContentTypeService,Umbraco.Cms.Core.Cache.AppCaches,Umbraco.Cms.Core.Services.IEntityService,Umbraco.Cms.Core.Strings.IShortStringHelper,uSync.BackOffice.Services.SyncFileService,uSync.BackOffice.Services.uSyncEventService,uSync.BackOffice.Configuration.uSyncConfigService,uSync.Core.ISyncItemFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Umbraco9ContentApi.Core.Services.uSyncContentTypesService"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="contentTypeService">The content type service.</param>
            <param name="appCaches">The application caches.</param>
            <param name="entityService">The entity service.</param>
            <param name="shortStringHelper">The short string helper.</param>
            <param name="uSyncFileService">The u synchronize file service.</param>
            <param name="uSyncEventService">The u synchronize event service.</param>
            <param name="uSyncConfigService">The u synchronize configuration service.</param>
            <param name="syncItemFactory">The synchronize item factory.</param>
        </member>
        <member name="M:Umbraco9ContentApi.Core.Services.uSyncContentTypesService.ImportAsync">
            <inheritdoc />
        </member>
        <member name="M:UmbracoContentApi.Core.Converters.JsonContentConverter.IsValidJson(System.String)">
            <summary>
            Determines whether [is valid json] [the specified string input].
            </summary>
            <param name="strInput">The string input.</param>
            <returns>
              <c>true</c> if [is valid json] [the specified string input]; otherwise, <c>false</c>.
            </returns>
        </member>
    </members>
</doc>
