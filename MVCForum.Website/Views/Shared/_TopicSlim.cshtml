@using MvcForum.Core.Utilities
@using MvcForum.Web.Application.ExtensionMethods
@model MvcForum.Web.ViewModels.Topic.TopicViewModel
@using MvcForum.Web.ViewModels.Shared
@{
    var postToolTip = string.Concat(StringUtils.ReturnAmountWordsFromString(StringUtils.StripHtmlFromString(Model.StarterPost.Post.PostContent), 50), "....");
}
@if (!Model.Permissions[ForumConfiguration.Instance.PermissionDenyAccess].IsTicked)
{
    <div class="topicrow topicrow-slim topicsticky-@(Model.Topic.IsSticky.ToString().ToLower()) topiclocked-@(Model.Topic.IsLocked.ToString().ToLower()) topicsolved-@(Model.Topic.Solved.ToString().ToLower())">

        <div class="rowdetails">
            <h4>
                <a title="@postToolTip" href="@Html.Raw(Model.Topic.NiceUrl)">
                    @if (Model.Topic.IsSticky)
                    {
                        {Html.RenderPartial("_SVGIcon", new SVGIconViewModel("icon-important", "c-ui-icon"));}
                    }
                    @if (Model.Topic.IsLocked)
                    {
                        {Html.RenderPartial("_SVGIcon", new SVGIconViewModel("icon-close", "c-ui-icon"));}
                    }
                    @if (Model.Topic.Poll != null)
                    {
                        {Html.RenderPartial("_SVGIcon", new SVGIconViewModel("icon-document", "c-ui-icon"));}
                    }
                    @Html.Raw(Model.Topic.Name)
                </a>
            </h4>
            <p class="topicrowfooterinfo">
                <a href="@Html.Raw(Model.Topic.NiceUrl)">@Html.LanguageString("Topic.LatestBy")</a>
                <a href="@Model.Topic.LastPost.User.NiceUrl">@Model.Topic.LastPost.User.UserName </a>
                @DatesUi.GetPrettyDate(Model.Topic.LastPost.DateCreated.ToString()).
                <span class="stats topicanswers">@{Html.RenderPartial("_SVGIcon", new SVGIconViewModel("icon-speech-bubbles", "c-ui-icon"));} @Model.Answers.KiloFormat()</span>
                <span class="stats topicviews">Views: @Model.Views.KiloFormat()</span>
                <span class="stats topicupvotes">@{Html.RenderPartial("_SVGIcon", new SVGIconViewModel("icon-thumbs-up", "c-ui-icon"));} @Model.VotesUp.KiloFormat()</span>
                <span class="stats topicdownvotes">@{Html.RenderPartial("_SVGIcon", new SVGIconViewModel("icon-down", "c-ui-icon"));}  @Model.VotesDown.KiloFormat()</span>
                @if (Model.Topic.Solved)
                {
                    <span class="stats topicsolved">@{ Html.RenderPartial("_SVGIcon", new SVGIconViewModel("icon-tick", "c-ui-icon c-ui-icon--green")); }</span>
                }
            </p>

        </div>
    </div>
}