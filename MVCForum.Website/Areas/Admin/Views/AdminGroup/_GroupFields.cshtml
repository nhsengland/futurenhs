@using MvcForum.Web.Application.ExtensionMethods
@model MvcForum.Web.ViewModels.Admin.GroupEditViewModel

<div class="form-group">
    @Html.LabelFor(model => model.GroupColour)
    @Html.EditorFor(model => model.GroupColour)
    @Html.ValidationMessageFor(model => model.GroupColour)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Name)
    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Name)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Description)
    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Description)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Subtitle)
    @Html.TextBoxFor(model => model.Subtitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Subtitle)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Introduction)
    @Html.TextAreaFor(model => model.Introduction, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Introduction)
</div>

<div class="row Groupimage">

    @if (!string.IsNullOrEmpty(Model.Image))
    {
        <div class="col-md-2">
            <p><img src="@AppHelpers.GroupImage(Model.Image, Model.Id,110)" alt="@Model.Name" class="img-responsive" /></p>
            <p><a class="btn-mvc" href="@Url.Action("RemoveGroupImage", "AdminGroup", new { id =  Model.Id, area = "Admin" })">Remove Image</a></p>
        </div>
    }

    <div class="col-md-10">
        @Html.LabelFor(x => x.Files)
        <div class="input-group">
            <span class="input-group-btn">
                <span class="btn btn-default btn-file">
                    @Html.LanguageString("Post.Browse") <input type="file" name="files"  id="FileToUpload_PostedFile" value="">
                </span>
            </span>
            <input type="text" class="form-control" readonly="">
        </div>
        @Html.ValidationMessageFor(x => x.Files)
    </div>
</div>

<div class="checkbox">
    @using (Html.BeginLabelFor(m => m.IsLocked, new { @class = "checkbox" }))
    {
        @Html.CheckBoxFor(m => m.IsLocked)
    }
    @Html.ValidationMessageFor(m => m.IsLocked)
</div>

<div class="checkbox">
    @using (Html.BeginLabelFor(m => m.Public, new { @class = "checkbox" }))
    {
        @Html.CheckBoxFor(m => m.Public)
    }
    @Html.ValidationMessageFor(m => m.Public)
</div>

<div class="checkbox">
    @using (Html.BeginLabelFor(m => m.ModerateTopics, new { @class = "checkbox" }))
    {
        @Html.CheckBoxFor(m => m.ModerateTopics)
    }
    @Html.ValidationMessageFor(m => m.ModerateTopics)
</div>

<div class="checkbox">
    @using (Html.BeginLabelFor(m => m.ModeratePosts, new { @class = "checkbox" }))
    {
        @Html.CheckBoxFor(m => m.ModeratePosts)
    }
    @Html.ValidationMessageFor(m => m.ModeratePosts)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.SortOrder)
    @Html.TextBoxFor(model => model.SortOrder, new { @class = "form-control", type = "number" })
    @Html.ValidationMessageFor(model => model.SortOrder)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ParentGroup)
    @Html.DropDownListFor(model => model.ParentGroup, Model.AllGroups, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.ParentGroup)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Section)
    <p class="help-block">Sections only apply to main Groups.</p>
    @Html.DropDownListFor(model => model.Section, Model.AllSections, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Section)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.GroupOwner)
    @Html.DropDownListFor(model => model.GroupOwner, Model.Users, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.GroupOwner)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.GroupAdministrators)
    @Html.ListBoxFor(model => model.GroupAdministrators, Model.Users, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.GroupAdministrators)
</div>

<hr />

<div class="form-group">
    @Html.LabelFor(model => model.PageTitle)
    @Html.TextBoxFor(model => model.PageTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.PageTitle)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.MetaDesc)
    @Html.TextAreaFor(model => model.MetaDesc, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.MetaDesc)
</div>
@Html.HiddenFor(x => x.RowVersion)

